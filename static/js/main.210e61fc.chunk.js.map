{"version":3,"sources":["data/ingredient-lists.ts","data/forage-lists.ts","data/forage.ts","components/AbilityCheckIfApplicable.tsx","components/ForageTable.tsx","components/ForageListSelection.tsx","components/ForagingCheckControls.tsx","components/IngredientResult.tsx","components/ForageResult.tsx","components/ForageResultsHistory.tsx","components/ForagingCalculator.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Effect","Tag","ingredients","apple","name","image","price","hp","duration","shroom","wildberry","bass","sankeCarp","herb","palmFruit","rawMeat","rawBirdDrumstick","rawPrimeMeat","rawBirdThigh","rawGourmetMeat","rawWholeBird","woodlandBoar","check","woodlandDeer","woodlandElk","treeNut","acorn","rice","rockSalt","wheat","caneSugar","freshMilk","goatButter","birdEgg","currySpice","starFragment","tags","Critical","dragonScale","dragonClaw","dragonFang","dragonHorn","spicyPepper","effect","spicy","warmSafflina","sizzlefinTrout","sunshroom","summerwingButterfly","Critter","warmDarner","coolSafflina","chilly","hydromelon","chillfinTrout","chillshroom","winterwingButterfly","coldDarner","fireproofLizard","fireproof","smotherwingButterfly","electricSafflina","electro","voltfruit","voltfinTrout","zapshroom","thunderwingButterfly","electricDarner","mightyThistle","mighty","mightyBananas","mightyCarp","razorclawCrab","mightyPorgy","bladedRhinoBeetle","armoranth","tough","armoredCarp","fortifiedPumpkin","ironshellCrab","ironshroom","armoredPorgy","ruggedRhinoBeetle","rushroom","hasty","swiftCarrot","fleetLotusSeeds","swiftViolet","hightailLizard","hotFootedFrog","blueNightshade","sneaky","sneakyRiverSnail","silentShroom","stealthfinTrout","silentPrincess","sunsetFirefly","stamellaShroom","energizing","brightEyedCrab","courserBeeHoney","staminokaBass","restlessCricket","energeticRhinoBeetle","enduraShroom","enduring","enduraCarrot","tirelessFrog","heartyTruffle","Infinity","hearty","heartyBass","heartyBlueshellSnail","heartyRadish","bigHeartyTruffle","heartyDurian","heartySalmon","bigHeartyRadish","heartyLizard","forageLists","key","ingredientCount","length","console","error","Rarity","defaultForageListName","Object","keys","indexToRarity","index","Common","Uncommon","Rare","d","n","roll","reroll","Math","random","includes","Find","amountDie","typeDie","resultsToReroll","natAmount","amount","type","ingredient","rarity","this","map","r","log","forage","survivalMod","dc","results","pushIngredient","push","max","sorted","slice","sort","a","b","result","AbilityCheckIfApplicable","props","className","ForageTableMemo","React","memo","colSpan","forageList","ForageTableRow","rarityClass","toLowerCase","imgSrc","src","alt","ForageListSelection","forageListNames","value","forageListName","onChange","e","setForageListName","target","listName","ForagingCheckControls","min","setSurvivalMod","parseInt","setDc","IngredientResult","find","workings","amountWorkings","typeWorkings","workingsTooltip","amountOfType","title","ForageResultMemo","ForageResultsHistory","resultsHistory","reverse","ForagingCalculator","useState","setResultsHistory","onClick","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.210e61fc.chunk.js","sourcesContent":["export enum Effect {\r\n  Spicy = 'spicy',\r\n  Chilly = 'chilly',\r\n  Fireproof = 'fireproof',\r\n  Electro = 'electro',\r\n  Mighty = 'mighty',\r\n  Tough = 'tough',\r\n  Hasty = 'hasty',\r\n  Sneaky = 'sneaky',\r\n  Energizing = 'energizing',\r\n  Enduring = 'enduring',\r\n  Hearty = 'hearty'\r\n}\r\n\r\nexport enum Tag {\r\n  Critical = 'critical',\r\n  Critter = 'critter'\r\n}\r\n\r\nexport type Ingredient = {\r\n  name: string\r\n  check?: string\r\n  image: string\r\n  price: number\r\n  hp: number\r\n  duration: number\r\n  effect?: { [key in Effect]?: number }\r\n  tags?: Tag[]\r\n}\r\n\r\nexport type IngredientList = {\r\n  [key: string]: Ingredient\r\n}\r\n\r\nexport const ingredients: IngredientList = {\r\n  // Basic\r\n  apple: {\r\n    name: 'Apple',\r\n    image: 'apple.png',\r\n    price: 3,\r\n    hp: 1,\r\n    duration: 30\r\n  },\r\n  shroom: {\r\n    name: 'Shroom',\r\n    image: 'shroom.png',\r\n    price: 3,\r\n    hp: 1,\r\n    duration: 30\r\n  },\r\n  wildberry: {\r\n    name: 'Wildberry',\r\n    image: 'wildberry.png',\r\n    price: 3,\r\n    hp: 1,\r\n    duration: 30\r\n  },\r\n  bass: {\r\n    name: 'Bass',\r\n    image: 'bass.png',\r\n    price: 6,\r\n    hp: 1,\r\n    duration: 30\r\n  },\r\n  sankeCarp: {\r\n    name: 'Sanke Carp',\r\n    image: 'sanke-carp.png',\r\n    price: 20,\r\n    hp: 1,\r\n    duration: 30\r\n  },\r\n  herb: {\r\n    name: 'Herb',\r\n    image: 'herb.png',\r\n    price: 3,\r\n    hp: 2,\r\n    duration: 30\r\n  },\r\n  palmFruit: {\r\n    name: 'Palm Fruit',\r\n    image: 'palm-fruit.png',\r\n    price: 4,\r\n    hp: 2,\r\n    duration: 30\r\n  },\r\n  rawMeat: {\r\n    name: 'Raw Meat',\r\n    image: 'raw-meat.png',\r\n    price: 8,\r\n    hp: 2,\r\n    duration: 30\r\n  },\r\n  rawBirdDrumstick: {\r\n    name: 'Raw Bird Drumstick',\r\n    image: 'raw-bird-drumstick.png',\r\n    price: 8,\r\n    hp: 2,\r\n    duration: 30\r\n  },\r\n  rawPrimeMeat: {\r\n    name: 'Raw Prime Meat',\r\n    image: 'raw-prime-meat.png',\r\n    price: 15,\r\n    hp: 3,\r\n    duration: 30\r\n  },\r\n  rawBirdThigh: {\r\n    name: 'Raw Bird Thigh',\r\n    image: 'raw-bird-thigh.png',\r\n    price: 15,\r\n    hp: 3,\r\n    duration: 30\r\n  },\r\n  rawGourmetMeat: {\r\n    name: 'Raw Gourmet Meat',\r\n    image: 'raw-gourmet-meat.png',\r\n    price: 35,\r\n    hp: 6,\r\n    duration: 30\r\n  },\r\n  rawWholeBird: {\r\n    name: 'Raw Whole Bird',\r\n    image: 'raw-whole-bird.png',\r\n    price: 35,\r\n    hp: 6,\r\n    duration: 30\r\n  },\r\n  // Hunting\r\n  woodlandBoar: {\r\n    name: 'Raw Meat',\r\n    image: 'raw-meat.png',\r\n    check: 'Woodland Boar',\r\n    price: 8,\r\n    hp: 2,\r\n    duration: 30\r\n  },\r\n  woodlandDeer: {\r\n    name: 'Raw Meat',\r\n    image: 'raw-meat.png',\r\n    check: 'Woodland Deer',\r\n    price: 8,\r\n    hp: 2,\r\n    duration: 30\r\n  },\r\n  woodlandElk: {\r\n    name: 'Raw Prime Meat',\r\n    image: 'raw-prime-meat.png',\r\n    check: 'Woodland Elk',\r\n    price: 15,\r\n    hp: 3,\r\n    duration: 30\r\n  },\r\n  // Duration Boosting\r\n  treeNut: {\r\n    name: 'Tree Nut',\r\n    image: 'tree-nut.png',\r\n    price: 3,\r\n    hp: 0.5,\r\n    duration: 40\r\n  },\r\n  acorn: {\r\n    name: 'Acorn',\r\n    image: 'acorn.png',\r\n    price: 2,\r\n    hp: 0.5,\r\n    duration: 50\r\n  },\r\n  rice: {\r\n    name: 'Rice',\r\n    image: 'rice.png',\r\n    price: 3,\r\n    hp: 2,\r\n    duration: 60\r\n  },\r\n  rockSalt: {\r\n    name: 'Rock Salt',\r\n    image: 'rock-salt.png',\r\n    price: 2,\r\n    hp: 0,\r\n    duration: 60\r\n  },\r\n  wheat: {\r\n    name: 'Wheat',\r\n    image: 'wheat.png',\r\n    price: 3,\r\n    hp: 2,\r\n    duration: 60\r\n  },\r\n  caneSugar: {\r\n    name: 'Cane Sugar',\r\n    image: 'cane-sugar.png',\r\n    price: 3,\r\n    hp: 0,\r\n    duration: 80\r\n  },\r\n  freshMilk: {\r\n    name: 'Fresh Milk',\r\n    image: 'fresh-milk.png',\r\n    price: 3,\r\n    hp: 1,\r\n    duration: 80\r\n  },\r\n  goatButter: {\r\n    name: 'Goat Butter',\r\n    image: 'goat-butter.png',\r\n    price: 3,\r\n    hp: 0,\r\n    duration: 80\r\n  },\r\n  birdEgg: {\r\n    name: 'Bird Egg',\r\n    image: 'bird-egg.png',\r\n    price: 3,\r\n    hp: 2,\r\n    duration: 90\r\n  },\r\n  currySpice: {\r\n    name: 'Curry Spice',\r\n    image: 'curry-spice.png',\r\n    price: 4,\r\n    hp: 0,\r\n    duration: 90\r\n  },\r\n  // Critical\r\n  starFragment: {\r\n    name: 'Star Fragment',\r\n    image: 'star-fragment.png',\r\n    price: 300,\r\n    hp: 3,\r\n    duration: 90,\r\n    tags: [ Tag.Critical ]\r\n  },\r\n  dragonScale: {\r\n    name: 'Dragon Scale',\r\n    image: 'dragon-scale.png',\r\n    price: 150,\r\n    hp: 1,\r\n    duration: 90,\r\n    tags: [ Tag.Critical ]\r\n  },\r\n  dragonClaw: {\r\n    name: 'Dragon Claw',\r\n    image: 'dragon-claw.png',\r\n    price: 180,\r\n    hp: 2,\r\n    duration: 210,\r\n    tags: [ Tag.Critical ]\r\n  },\r\n  dragonFang: {\r\n    name: 'Dragon Fang',\r\n    image: 'dragon-fang.png',\r\n    price: 250,\r\n    hp: 3,\r\n    duration: 630,\r\n    tags: [ Tag.Critical ]\r\n  },\r\n  dragonHorn: {\r\n    name: 'Dragon Horn',\r\n    image: 'dragon-horn.png',\r\n    price: 300,\r\n    hp: 4,\r\n    duration: 1800,\r\n    tags: [ Tag.Critical ]\r\n  },\r\n  // Spicy\r\n  spicyPepper: {\r\n    name: 'Spicy Pepper',\r\n    image: 'spicy-pepper.png',\r\n    price: 3,\r\n    hp: 1,\r\n    duration: 150,\r\n    effect: { spicy: 1 }\r\n  },\r\n  warmSafflina: {\r\n    name: 'Warm Safflina',\r\n    image: 'warm-safflina.png',\r\n    price: 3,\r\n    hp: 0,\r\n    duration: 150,\r\n    effect: { spicy: 1 }\r\n  },\r\n  sizzlefinTrout: {\r\n    name: 'Sizzlefin Trout',\r\n    image: 'sizzlefin-trout.png',\r\n    price: 6,\r\n    hp: 2,\r\n    duration: 150,\r\n    effect: { spicy: 2 }\r\n  },\r\n  sunshroom: {\r\n    name: 'Sunshroom',\r\n    image: 'sunshroom.png',\r\n    price: 4,\r\n    hp: 1,\r\n    duration: 150,\r\n    effect: { spicy: 2 }\r\n  },\r\n  summerwingButterfly: {\r\n    name: 'Summerwing Butterfly',\r\n    image: 'summerwing-butterfly.png',\r\n    check: 'Sleight of hand 10',\r\n    price: 2,\r\n    hp: 0,\r\n    duration: 150,\r\n    effect: { spicy: 1 },\r\n    tags: [ Tag.Critter ]\r\n  },\r\n  warmDarner: {\r\n    name: 'Warm Darner',\r\n    image: 'warm-darner.png',\r\n    check: 'Sleight of hand 15',\r\n    price: 2,\r\n    hp: 0,\r\n    duration: 150,\r\n    effect: { spicy: 2 },\r\n    tags: [ Tag.Critter ]\r\n  },\r\n  // Chilly\r\n  coolSafflina: {\r\n    name: 'Cool Safflina',\r\n    image: 'cool-safflina.png',\r\n    price: 3,\r\n    hp: 0,\r\n    duration: 150,\r\n    effect: { chilly: 1 }\r\n  },\r\n  hydromelon: {\r\n    name: 'Hydromelon',\r\n    image: 'hydromelon.png',\r\n    price: 4,\r\n    hp: 1,\r\n    duration: 150,\r\n    effect: { chilly: 1 }\r\n  },\r\n  chillfinTrout: {\r\n    name: 'Chillfin Trout',\r\n    image: 'Chillfin-trout.png',\r\n    price: 6,\r\n    hp: 2,\r\n    duration: 150,\r\n    effect: { chilly: 2 }\r\n  },\r\n  chillshroom: {\r\n    name: 'Chillshroom',\r\n    image: 'chillshroom.png',\r\n    price: 4,\r\n    hp: 1,\r\n    duration: 150,\r\n    effect: { chilly: 2 }\r\n  },\r\n  winterwingButterfly: {\r\n    name: 'Winterwing Butterfly',\r\n    image: 'winterwing-butterfly.png',\r\n    check: 'Sleight of hand 10',\r\n    price: 2,\r\n    hp: 0,\r\n    duration: 150,\r\n    effect: { chilly: 1 },\r\n    tags: [ Tag.Critter ]\r\n  },\r\n  coldDarner: {\r\n    name: 'Cold Darner',\r\n    image: 'cold-darner.png',\r\n    check: 'Sleight of hand 15',\r\n    price: 2,\r\n    hp: 0,\r\n    duration: 150,\r\n    effect: { chilly: 2 },\r\n    tags: [ Tag.Critter ]\r\n  },\r\n  // Fireproof\r\n  fireproofLizard: {\r\n    name: 'Fireproof Lizard',\r\n    image: 'fireproof-lizard.png',\r\n    check: 'Sleight of hand 10',\r\n    price: 5,\r\n    hp: 0,\r\n    duration: 150,\r\n    effect: { fireproof: 1 },\r\n    tags: [ Tag.Critter ]\r\n  },\r\n  smotherwingButterfly: {\r\n    name: 'Smotherwing Butterfly',\r\n    image: 'smotherwing-butterfly.png',\r\n    check: 'Sleight of hand 10',\r\n    price: 2,\r\n    hp: 0,\r\n    duration: 150,\r\n    effect: { fireproof: 2 },\r\n    tags: [ Tag.Critter ]\r\n  },\r\n  // Electro\r\n  electricSafflina: {\r\n    name: 'Electric Safflina',\r\n    image: 'electric-safflina.png',\r\n    price: 3,\r\n    hp: 0,\r\n    duration: 150,\r\n    effect: { electro: 1 }\r\n  },\r\n  voltfruit: {\r\n    name: 'Voltfruit',\r\n    image: 'voltfruit.png',\r\n    price: 4,\r\n    hp: 1,\r\n    duration: 150,\r\n    effect: { electro: 1 }\r\n  },\r\n  voltfinTrout: {\r\n    name: 'Voltfin Trout',\r\n    image: 'Voltfin-trout.png',\r\n    price: 6,\r\n    hp: 2,\r\n    duration: 150,\r\n    effect: { electro: 2 }\r\n  },\r\n  zapshroom: {\r\n    name: 'Zapshroom',\r\n    image: 'zapshroom.png',\r\n    price: 4,\r\n    hp: 1,\r\n    duration: 150,\r\n    effect: { electro: 2 }\r\n  },\r\n  thunderwingButterfly: {\r\n    name: 'Thunderwing Butterfly',\r\n    image: 'thunderwing-butterfly.png',\r\n    check: 'Sleight of hand 10',\r\n    price: 2,\r\n    hp: 0,\r\n    duration: 150,\r\n    effect: { electro: 1 },\r\n    tags: [ Tag.Critter ]\r\n  },\r\n  electricDarner: {\r\n    name: 'Electric Darner',\r\n    image: 'electric-darner.png',\r\n    check: 'Sleight of hand 15',\r\n    price: 2,\r\n    hp: 0,\r\n    duration: 150,\r\n    effect: { electro: 2 },\r\n    tags: [ Tag.Critter ]\r\n  },\r\n  // Mighty\r\n  mightyThistle: {\r\n    name: 'Mighty Thistle',\r\n    image: 'mighty-thistle.png',\r\n    price: 5,\r\n    hp: 0,\r\n    duration: 50,\r\n    effect: { mighty: 1 },\r\n  },\r\n  mightyBananas: {\r\n    name: 'Mighty Bananas',\r\n    image: 'mighty-bananas.png',\r\n    price: 5,\r\n    hp: 1,\r\n    duration: 50,\r\n    effect: { mighty: 2 },\r\n  },\r\n  mightyCarp: {\r\n    name: 'Mighty Carp',\r\n    image: 'mighty-carp.png',\r\n    price: 10,\r\n    hp: 2,\r\n    duration: 50,\r\n    effect: { mighty: 2 },\r\n  },\r\n  razorclawCrab: {\r\n    name: 'Razorclaw Crab',\r\n    image: 'razorclaw-crab.png',\r\n    price: 8,\r\n    hp: 2,\r\n    duration: 50,\r\n    effect: { mighty: 2 },\r\n  },\r\n  mightyPorgy: {\r\n    name: 'Mighty Porgy',\r\n    image: 'mighty-porgy.png',\r\n    price: 10,\r\n    hp: 2,\r\n    duration: 50,\r\n    effect: { mighty: 3 },\r\n  },\r\n  bladedRhinoBeetle: {\r\n    name: 'Bladed Rhino Beetle',\r\n    image: 'bladed-rhino-beetle.png',\r\n    check: 'Stealth 15',\r\n    price: 4,\r\n    hp: 0,\r\n    duration: 50,\r\n    effect: { mighty: 1 },\r\n    tags: [ Tag.Critter ]\r\n  },\r\n  // Tough\r\n  armoranth: {\r\n    name: 'Armoranth',\r\n    image: 'armoranth.png',\r\n    price: 5,\r\n    hp: 0,\r\n    duration: 50,\r\n    effect: { tough: 1 }\r\n  },\r\n  armoredCarp: {\r\n    name: 'Armored Carp',\r\n    image: 'armored-carp.png',\r\n    price: 10,\r\n    hp: 2,\r\n    duration: 50,\r\n    effect: { tough: 2 },\r\n  },\r\n  fortifiedPumpkin: {\r\n    name: 'Fortified Pumpkin',\r\n    image: 'fortified-pumpkin.png',\r\n    price: 5,\r\n    hp: 1,\r\n    duration: 50,\r\n    effect: { tough: 2 },\r\n  },\r\n  ironshellCrab: {\r\n    name: 'Ironshell Crab',\r\n    image: 'ironshell-crab.png',\r\n    price: 8,\r\n    hp: 2,\r\n    duration: 50,\r\n    effect: { tough: 2 },\r\n  },\r\n  ironshroom: {\r\n    name: 'Ironshroom',\r\n    image: 'ironshroom.png',\r\n    price: 5,\r\n    hp: 1,\r\n    duration: 50,\r\n    effect: { tough: 2 },\r\n  },\r\n  armoredPorgy: {\r\n    name: 'Armored Porgy',\r\n    image: 'armored-porgy.png',\r\n    price: 10,\r\n    hp: 2,\r\n    duration: 50,\r\n    effect: { tough: 3 },\r\n  },\r\n  ruggedRhinoBeetle: {\r\n    name: 'Rugged Rhino Beetle',\r\n    image: 'rugged-rhino-beetle.png',\r\n    check: 'Stealth 15',\r\n    price: 4,\r\n    hp: 0,\r\n    duration: 50,\r\n    effect: { tough: 1 },\r\n    tags: [ Tag.Critter ]\r\n  },\r\n  // Hasty\r\n  rushroom: {\r\n    name: 'Rushroom',\r\n    image: 'rushroom.png',\r\n    price: 3,\r\n    hp: 1,\r\n    duration: 50,\r\n    effect: { hasty: 1 }\r\n  },\r\n  swiftCarrot: {\r\n    name: 'Swift Carrot',\r\n    image: 'swift-carrot.png',\r\n    price: 4,\r\n    hp: 1,\r\n    duration: 50,\r\n    effect: { hasty: 1 }\r\n  },\r\n  fleetLotusSeeds: {\r\n    name: 'Fleet Lotus Seeds',\r\n    image: 'fleet-lotus-seeds.png',\r\n    price: 5,\r\n    hp: 1,\r\n    duration: 50,\r\n    effect: { hasty: 2 }\r\n  },\r\n  swiftViolet: {\r\n    name: 'Swift Violet',\r\n    image: 'swift-violet.png',\r\n    price: 10,\r\n    hp: 0,\r\n    duration: 50,\r\n    effect: { hasty: 2 }\r\n  },\r\n  hightailLizard: {\r\n    name: 'Hightail Lizard',\r\n    image: 'hightail-lizard.png',\r\n    check: 'Stealth 10',\r\n    price: 2,\r\n    hp: 0,\r\n    duration: 50,\r\n    effect: { hasty: 1 },\r\n    tags: [ Tag.Critter ]\r\n  },\r\n  hotFootedFrog: {\r\n    name: 'Hot-Footed Frog',\r\n    image: 'hot-footed-frog.png',\r\n    check: 'Stealth 10',\r\n    price: 2,\r\n    hp: 0,\r\n    duration: 50,\r\n    effect: { hasty: 2 },\r\n    tags: [ Tag.Critter ]\r\n  },\r\n  // Sneaky\r\n  blueNightshade: {\r\n    name: 'Blue Nightshade',\r\n    image: 'blue-nightshade.png',\r\n    price: 4,\r\n    hp: 0,\r\n    duration: 120,\r\n    effect: { sneaky: 1 }\r\n  },\r\n  sneakyRiverSnail: {\r\n    name: 'Sneaky River Snail',\r\n    image: 'sneaky-river-snail.png',\r\n    price: 6,\r\n    hp: 2,\r\n    duration: 120,\r\n    effect: { sneaky: 1 }\r\n  },\r\n  silentShroom: {\r\n    name: 'Silent Shroom',\r\n    image: 'silent-shroom.png',\r\n    price: 3,\r\n    hp: 1,\r\n    duration: 120,\r\n    effect: { sneaky: 2 }\r\n  },\r\n  stealthfinTrout: {\r\n    name: 'Stealthfin Trout',\r\n    image: 'stealthfin-trout.png',\r\n    price: 10,\r\n    hp: 2,\r\n    duration: 120,\r\n    effect: { sneaky: 2 }\r\n  },\r\n  silentPrincess: {\r\n    name: 'Silent Princess',\r\n    image: 'silent-princess.png',\r\n    price: 10,\r\n    hp: 0,\r\n    duration: 120,\r\n    effect: { sneaky: 3 }\r\n  },\r\n  sunsetFirefly: {\r\n    name: 'Sunset Firefly',\r\n    image: 'sunset-firefly.png',\r\n    price: 2,\r\n    hp: 0,\r\n    duration: 120,\r\n    effect: { sneaky: 1 },\r\n    tags: [ Tag.Critter ]\r\n  },\r\n  // Energizing\r\n  stamellaShroom: {\r\n    name: 'Stamella Shroom',\r\n    image: 'stamella-shroom.png',\r\n    price: 5,\r\n    hp: 1,\r\n    duration: 120,\r\n    effect: { energizing: 1 }\r\n  },\r\n  brightEyedCrab: {\r\n    name: 'Bright-Eyed Crab',\r\n    image: 'bright-eyed-crab.png',\r\n    price: 10,\r\n    hp: 2,\r\n    duration: 120,\r\n    effect: { energizing: 2 }\r\n  },\r\n  courserBeeHoney: {\r\n    name: 'Courser Bee Honey',\r\n    image: 'courser-bee-honey.png',\r\n    check: 'Swarm of Insects 50%',\r\n    price: 10,\r\n    hp: 4,\r\n    duration: 120,\r\n    effect: { energizing: 2 }\r\n  },\r\n  staminokaBass: {\r\n    name: 'Staminoka Bass',\r\n    image: 'staminoka-bass.png',\r\n    price: 18,\r\n    hp: 2,\r\n    duration: 120,\r\n    effect: { energizing: 4 }\r\n  },\r\n  restlessCricket: {\r\n    name: 'Restless Cricket',\r\n    image: 'restless-cricket.png',\r\n    check: 'Stealth 10',\r\n    price: 2,\r\n    hp: 0,\r\n    duration: 120,\r\n    effect: { energizing: 1 },\r\n    tags: [ Tag.Critter ]\r\n  },\r\n  energeticRhinoBeetle: {\r\n    name: 'Energetic Rhino Beetle',\r\n    image: 'energetic-rhino-beetle.png',\r\n    check: 'Stealth 15',\r\n    price: 30,\r\n    hp: 0,\r\n    duration: 120,\r\n    effect: { energizing: 6 },\r\n    tags: [ Tag.Critter ]\r\n  },\r\n  // Enduring\r\n  enduraShroom: {\r\n    name: 'Endura Shroom',\r\n    image: 'endura-shroom.png',\r\n    price: 6,\r\n    hp: 2,\r\n    duration: 30,\r\n    effect: { enduring: 1 }\r\n  },\r\n  enduraCarrot: {\r\n    name: 'Endura Carrot',\r\n    image: 'endura-carrot.png',\r\n    price: 30,\r\n    hp: 4,\r\n    duration: 30,\r\n    effect: { enduring: 4 }\r\n  },\r\n  tirelessFrog: {\r\n    name: 'Tireless Frog',\r\n    image: 'tireless-frog.png',\r\n    check: 'Stealth 10',\r\n    price: 20,\r\n    hp: 4,\r\n    duration: 50,\r\n    effect: { enduring: 2 },\r\n    tags: [ Tag.Critter ]\r\n  },\r\n  // Hearty\r\n  heartyTruffle: {\r\n    name: 'Hearty Truffle',\r\n    image: 'hearty-truffle.png',\r\n    price: 6,\r\n    hp: Infinity,\r\n    duration: 30,\r\n    effect: { hearty: 1 }\r\n  },\r\n  heartyBass: {\r\n    name: 'Hearty Bass',\r\n    image: 'hearty-bass.png',\r\n    price: 18,\r\n    hp: Infinity,\r\n    duration: 30,\r\n    effect: { hearty: 2 }\r\n  },\r\n  heartyBlueshellSnail: {\r\n    name: 'Hearty Blueshell Snail',\r\n    image: 'hearty-blueshell-snail.png',\r\n    price: 15,\r\n    hp: Infinity,\r\n    duration: 30,\r\n    effect: { hearty: 3 }\r\n  },\r\n  heartyRadish: {\r\n    name: 'Hearty Radish',\r\n    image: 'hearty-radish.png',\r\n    price: 8,\r\n    hp: Infinity,\r\n    duration: 30,\r\n    effect: { hearty: 3 }\r\n  },\r\n  bigHeartyTruffle: {\r\n    name: 'Big Hearty Truffle',\r\n    image: 'big-hearty-truffle.png',\r\n    price: 15,\r\n    hp: Infinity,\r\n    duration: 30,\r\n    effect: { hearty: 4 }\r\n  },\r\n  heartyDurian: {\r\n    name: 'Hearty Durian',\r\n    image: 'hearty-durian.png',\r\n    price: 15,\r\n    hp: Infinity,\r\n    duration: 30,\r\n    effect: { hearty: 4 }\r\n  },\r\n  heartySalmon: {\r\n    name: 'Hearty Salmon',\r\n    image: 'hearty-salmon.png',\r\n    price: 10,\r\n    hp: Infinity,\r\n    duration: 30,\r\n    effect: { hearty: 4 }\r\n  },\r\n  bigHeartyRadish: {\r\n    name: 'Big Hearty Radish',\r\n    image: 'big-hearty-radish.png',\r\n    price: 15,\r\n    hp: Infinity,\r\n    duration: 30,\r\n    effect: { hearty: 5 }\r\n  },\r\n  heartyLizard: {\r\n    name: 'Hearty Lizard',\r\n    image: 'hearty-lizard.png',\r\n    check: 'Stealth 10',\r\n    price: 20,\r\n    hp: Infinity,\r\n    duration: 30,\r\n    effect: { hearty: 4 },\r\n    tags: [ Tag.Critter ]\r\n  }\r\n}\r\n","import { ingredients, Ingredient } from './ingredient-lists'\r\n\r\nexport type ForageLists = {\r\n  [key: string]: Ingredient[]\r\n}\r\n\r\nexport const forageLists: ForageLists = {\r\n  'Forest 1': [\r\n    ingredients.apple,\r\n    ingredients.herb,\r\n    ingredients.shroom,\r\n    ingredients.spicyPepper,\r\n    ingredients.stamellaShroom,\r\n    ingredients.woodlandBoar,\r\n    ingredients.courserBeeHoney,\r\n    ingredients.heartyRadish,\r\n    ingredients.heartyTruffle,\r\n    ingredients.summerwingButterfly,\r\n    ingredients.enduraCarrot,\r\n    ingredients.ruggedRhinoBeetle\r\n  ],\r\n  'Forest 2': [\r\n    ingredients.acorn,\r\n    ingredients.armoranth,\r\n    ingredients.birdEgg,\r\n    ingredients.blueNightshade,\r\n    ingredients.woodlandDeer,\r\n    ingredients.rushroom,\r\n    ingredients.heartyRadish,\r\n    ingredients.hightailLizard,\r\n    ingredients.woodlandElk,\r\n    ingredients.sunshroom,\r\n    ingredients.bigHeartyRadish,\r\n    ingredients.bladedRhinoBeetle\r\n  ]\r\n}\r\n\r\n// Testing - all ingredients in one foraging list\r\n// forageLists['All'] = Object.values(ingredients)\r\n\r\n// Check that each foraging list has exactly 12 ingredients\r\nfor (let key in forageLists) {\r\n  const ingredientCount = forageLists[key].length\r\n  if (ingredientCount !== 12)\r\n    console.error(`Foraging list '${key}' has ${ingredientCount} ingredients (expected 12)`)\r\n}\r\n\r\nexport const defaultForageListName = Object.keys(forageLists)[0]\r\n\r\nexport enum Rarity {\r\n  Common = 'Common',\r\n  Uncommon = 'Uncommon',\r\n  Rare = 'Rare'\r\n}\r\n\r\nexport function indexToRarity(index: number): Rarity {\r\n  if (index < 6)\r\n    return Rarity.Common\r\n\r\n  if (index < 10)\r\n    return Rarity.Uncommon\r\n\r\n  return Rarity.Rare\r\n}\r\n","import { Ingredient } from './ingredient-lists'\r\nimport { indexToRarity, Rarity } from './forage-lists'\r\n\r\n/**\r\n * Rolls a die in range [1, n] with the option to reroll certain values.\r\n * @param n Maximum die value.\r\n * @param reroll Values that must be rerolled.\r\n */\r\nfunction d(n: number, reroll: number[] = []): number {\r\n  let roll: number\r\n  do {\r\n    roll = 1 + Math.random() * n | 0\r\n  } while (reroll.includes(roll))\r\n  return roll\r\n}\r\n\r\n/**\r\n * Class that represents one found ingredient, including its type and amount.\r\n */\r\nexport class Find {\r\n  // Dice calculation workings\r\n  amountDie: number\r\n  typeDie: number\r\n\r\n  // Rolls\r\n  natAmount: number // 1+\r\n  amount: number // 1+ (+ Survival mod for largest two rolls)\r\n  type: number // 1-12\r\n\r\n  // Ingredient result\r\n  ingredient: Ingredient\r\n  rarity: Rarity\r\n\r\n  /**\r\n   * Construct by rolling dice to determine what is in this find.\r\n   * @param amountDie The maximum die value for the amount of the ingredient found.\r\n   * @param typeDie The maximum die value for the type of ingredient found.\r\n   * @param resultsToReroll A list of existing Finds that should be rerolled to avoid dupes.\r\n   */\r\n  constructor(amountDie: number, typeDie: number, resultsToReroll: Find[], ingredients: Ingredient[]) {\r\n    this.amountDie = amountDie\r\n    this.typeDie = typeDie\r\n\r\n    this.natAmount = d(amountDie)\r\n    this.amount = this.natAmount\r\n    this.type = d(typeDie, resultsToReroll.map(r => r.type))\r\n\r\n    this.ingredient = ingredients[this.type - 1]\r\n    this.rarity = indexToRarity(this.type - 1)\r\n  }\r\n\r\n  /**\r\n   * Logs this Find to the console.\r\n   * @param ingredients List of ingredient names to map ingredient type number onto a type name.\r\n   */\r\n  log(ingredients: Ingredient[]): void {\r\n    console.log(this.natAmount, ingredients[this.type - 1].name)\r\n  }\r\n}\r\n\r\n/**\r\n * Calculates the yield of a successful foraging check.\r\n * @param survivalMod The forager's Survival modifer.\r\n * @param dc The Difficulty Class of the Survival check.\r\n * @param ingredients Forage list of ingredients in this area.\r\n */\r\nexport default function forage(survivalMod: number, dc = 10, ingredients: Ingredient[]): Find[] {\r\n  const results: Find[] = []\r\n\r\n  // Helper to push ingredients into the results array.\r\n  const pushIngredient = (amountDie: number, typeDie: number) =>\r\n    results.push(new Find(amountDie, typeDie, results, ingredients))\r\n\r\n  // Common 1\r\n  if (dc <= 10)\r\n    pushIngredient(12, 6)\r\n\r\n  // Common 2\r\n  if (dc <= 15)\r\n    pushIngredient(8, 6)\r\n\r\n  // Uncommon\r\n  pushIngredient(6, 10)\r\n\r\n  // Rare\r\n  pushIngredient(4, 12)\r\n\r\n  // Add survival mod to largest two rolls\r\n  survivalMod = Math.max(0, survivalMod)\r\n  const sorted = results.slice().sort((a, b) => b.natAmount - a.natAmount)\r\n  sorted[0].amount += survivalMod\r\n  sorted[1].amount += survivalMod\r\n\r\n  // Logging\r\n  console.log(`Forage (survival mod ${survivalMod}, DC ${dc})`)\r\n  for (let result of results) {\r\n    result.log(ingredients)\r\n  }\r\n\r\n  return results\r\n}\r\n","import React from 'react'\r\n\r\nexport default function AbilityCheckIfApplicable(props: {\r\n  check: string | undefined\r\n}): JSX.Element | null {\r\n  if (!props.check)\r\n    return null\r\n\r\n  return <span className=\"ability-check\">({props.check})</span>\r\n}\r\n","import React from 'react'\r\n\r\nimport { indexToRarity } from '../data/forage-lists'\r\nimport { Ingredient } from '../data/ingredient-lists'\r\n\r\nimport AbilityCheckIfApplicable from './AbilityCheckIfApplicable'\r\n\r\nexport const ForageTableMemo = React.memo(ForageTable)\r\n\r\nexport default function ForageTable(props: {\r\n  forageList: Ingredient[]\r\n}): JSX.Element {\r\n  return (\r\n    <table className=\"forage-table\">\r\n      <thead>\r\n        <tr>\r\n          <td>Roll</td>\r\n          <td colSpan={3}>Ingredient</td>\r\n          <td>Rarity</td>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.forageList.map((ingredient, index) => (\r\n          <ForageTableRow ingredient={ingredient} index={index} key={index}/>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nfunction ForageTableRow(props: {\r\n  ingredient: Ingredient\r\n  index: number\r\n}): JSX.Element {\r\n  const rarity = indexToRarity(props.index)\r\n  const rarityClass = `rarity-${rarity.toLowerCase()}`\r\n  const imgSrc = `./images/ingredients/${props.ingredient.image}`\r\n\r\n  return (\r\n    <tr className={rarityClass}>\r\n      <td>{props.index + 1}</td>\r\n      <td><img src={imgSrc} alt=\"\"/></td>\r\n      <td>{props.ingredient.name}</td>\r\n      <td><AbilityCheckIfApplicable check={props.ingredient.check}/></td>\r\n      <td>{rarity}</td>\r\n    </tr>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { forageLists } from '../data/forage-lists'\r\n\r\nexport default function ForageListSelection(props: {\r\n  forageListName: string,\r\n  setForageListName: (value: string) => void\r\n}): JSX.Element {\r\n  const forageListNames = Object.keys(forageLists)\r\n  return (\r\n    <select value={props.forageListName} onChange={e => props.setForageListName(e.target.value)}>\r\n      {forageListNames.map(listName => (\r\n        <option key={listName}>{listName}</option>\r\n      ))}\r\n    </select>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport ForageListSelection from './ForageListSelection'\r\n\r\nexport default function ForagingCheckControls(props: {\r\n  forageListName: string\r\n  setForageListName: (value: string) => void\r\n  survivalMod: number\r\n  setSurvivalMod: (value: number) => void\r\n  dc: number\r\n  setDc: (value: number) => void\r\n}): JSX.Element {\r\n  return (\r\n    <div className='forage-controls'>\r\n\r\n      <div>\r\n        <label>Environment</label>\r\n        <ForageListSelection forageListName={props.forageListName} setForageListName={props.setForageListName}/>\r\n      </div>\r\n\r\n      <div>\r\n        <label>Survival Modifier</label>\r\n        <input type=\"number\" min=\"-5\" max=\"22\" value={props.survivalMod} onChange={e => props.setSurvivalMod(parseInt(e.target.value, 10))}/>\r\n      </div>\r\n\r\n      <div>\r\n        <label>Food Availability</label>\r\n        <select value={props.dc} onChange={e => props.setDc(parseInt(e.target.value, 10))}>\r\n          <option key=\"10\" value=\"10\">Abundant (DC 10)</option>\r\n          <option key=\"15\" value=\"15\">Limited (DC 15)</option>\r\n          <option key=\"20\" value=\"20\">Very little, if any (DC 20)</option>\r\n        </select>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Find } from '../data/forage'\r\n\r\nimport AbilityCheckIfApplicable from './AbilityCheckIfApplicable'\r\n\r\nexport default function IngredientResult(props: {\r\n  find: Find\r\n}): JSX.Element {\r\n  const find = props.find\r\n  const ingredient = find.ingredient\r\n\r\n  const workings = workingsTooltip(find)\r\n  const imgSrc = `./images/ingredients/${ingredient.image}`\r\n  const rarityClass = `rarity-${find.rarity.toLowerCase()}`\r\n  const amountOfType = `${find.amount}× ${ingredient.name}`\r\n\r\n  return (\r\n    <div className=\"ingredient-result\" title={workings}>\r\n      <img src={imgSrc} alt=\"\"/>\r\n      <div><span className={rarityClass}>{amountOfType}</span></div>\r\n      <div><AbilityCheckIfApplicable check={ingredient.check}/></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction workingsTooltip(find: Find): string {\r\n  const arrow = '→'\r\n  const amountWorkings = find.amount === find.natAmount\r\n    ? `d${find.amountDie} ${arrow} ${find.amount}`\r\n    : `d${find.amountDie} + Survival Mod ${arrow} ${find.natAmount} + ${find.amount - find.natAmount} = ${find.amount}`\r\n  const typeWorkings = `d${find.typeDie} ${arrow} ${find.type} (${find.ingredient.name})`\r\n  const workings = `Amount found: ${amountWorkings}\\nType found: ${typeWorkings}`\r\n  return workings\r\n}\r\n","import React from 'react'\r\n\r\nimport { Find } from '../data/forage'\r\n\r\nimport IngredientResult from './IngredientResult'\r\n\r\nexport const ForageResultMemo = React.memo(ForageResult)\r\n\r\nexport default function ForageResult(props: {\r\n  result: Find[]\r\n}): JSX.Element {\r\n  return (\r\n    <div className=\"forage-result\">\r\n      {props.result.map((find, index) => (\r\n        <IngredientResult find={find} key={index}/>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Find } from '../data/forage'\r\n\r\nimport { ForageResultMemo } from './ForageResult'\r\n\r\nexport default function ForageResultsHistory(props: {\r\n  resultsHistory: Find[][]\r\n}): JSX.Element {\r\n  return (\r\n    <div className=\"forage-results-history\">\r\n      {props.resultsHistory.map((result, index) => (\r\n        <ForageResultMemo result={result} key={index}/>\r\n      )).reverse()}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nimport forage, { Find } from '../data/forage'\r\nimport { forageLists, defaultForageListName } from '../data/forage-lists'\r\n\r\nimport { ForageTableMemo } from './ForageTable'\r\nimport ForagingCheckControls from './ForagingCheckControls'\r\nimport ForageResultsHistory from './ForageResultsHistory'\r\n\r\nimport './css/forage.css'\r\n\r\nexport default function ForagingCalculator(): JSX.Element {\r\n  const [forageListName, setForageListName] = useState(defaultForageListName)\r\n  const [survivalMod, setSurvivalMod] = useState(0)\r\n  const [dc, setDc] = useState(10)\r\n  const [resultsHistory, setResultsHistory] = useState<Find[][]>([])\r\n\r\n  const forageList = forageLists[forageListName]\r\n  const goForaging = () =>\r\n    setResultsHistory([...resultsHistory, forage(survivalMod, dc, forageList)])\r\n\r\n  return (\r\n    <div className=\"forage-calculator\">\r\n      <h1>Foraging Calculator</h1>\r\n      <ForageTableMemo forageList={forageList}/>\r\n      <ForagingCheckControls\r\n        forageListName={forageListName} setForageListName={setForageListName}\r\n        survivalMod={survivalMod} setSurvivalMod={setSurvivalMod}\r\n        dc={dc} setDc={setDc}/>\r\n      <button className=\"forage-button\" onClick={goForaging}>Forage!</button>\r\n      <ForageResultsHistory resultsHistory={resultsHistory}/>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport ForagingCalculator from './components/ForagingCalculator'\r\n\r\nexport default function App(): JSX.Element {\r\n  return (\r\n    <div className=\"App\">\r\n      <ForagingCalculator/>\r\n    </div>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register()\r\n"],"sourceRoot":""}